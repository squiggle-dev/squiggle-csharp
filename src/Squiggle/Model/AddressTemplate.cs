/* 
 * Squiggle API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Squiggle.Model
{
    /// <summary>
    /// AddressTemplate
    /// </summary>
    [DataContract]
    public partial class AddressTemplate :  IEquatable<AddressTemplate>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddressTemplate" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Email">Email.</param>
        /// <param name="FirstName">FirstName.</param>
        /// <param name="LastName">LastName.</param>
        /// <param name="JobTitle">JobTitle.</param>
        /// <param name="TelMobile">TelMobile.</param>
        /// <param name="TelDirect">TelDirect.</param>
        /// <param name="Linkedin">Linkedin.</param>
        /// <param name="Facebook">Facebook.</param>
        /// <param name="Twitter">Twitter.</param>
        /// <param name="Instagram">Instagram.</param>
        /// <param name="Googleplus">Googleplus.</param>
        /// <param name="Company">Company.</param>
        /// <param name="Marketing">Marketing.</param>
        public AddressTemplate(int? Id = null, string Email = null, string FirstName = null, string LastName = null, string JobTitle = null, string TelMobile = null, string TelDirect = null, string Linkedin = null, string Facebook = null, string Twitter = null, string Instagram = null, string Googleplus = null, UserTemplate Company = null, SnippetTemplate Marketing = null)
        {
            this.Id = Id;
            this.Email = Email;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.JobTitle = JobTitle;
            this.TelMobile = TelMobile;
            this.TelDirect = TelDirect;
            this.Linkedin = Linkedin;
            this.Facebook = Facebook;
            this.Twitter = Twitter;
            this.Instagram = Instagram;
            this.Googleplus = Googleplus;
            this.Company = Company;
            this.Marketing = Marketing;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="Id", EmitDefaultValue=false)]
        public int? Id { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="Email", EmitDefaultValue=false)]
        public string Email { get; set; }
        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="FirstName", EmitDefaultValue=false)]
        public string FirstName { get; set; }
        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="LastName", EmitDefaultValue=false)]
        public string LastName { get; set; }
        /// <summary>
        /// Gets or Sets JobTitle
        /// </summary>
        [DataMember(Name="JobTitle", EmitDefaultValue=false)]
        public string JobTitle { get; set; }
        /// <summary>
        /// Gets or Sets TelMobile
        /// </summary>
        [DataMember(Name="TelMobile", EmitDefaultValue=false)]
        public string TelMobile { get; set; }
        /// <summary>
        /// Gets or Sets TelDirect
        /// </summary>
        [DataMember(Name="TelDirect", EmitDefaultValue=false)]
        public string TelDirect { get; set; }
        /// <summary>
        /// Gets or Sets Linkedin
        /// </summary>
        [DataMember(Name="Linkedin", EmitDefaultValue=false)]
        public string Linkedin { get; set; }
        /// <summary>
        /// Gets or Sets Facebook
        /// </summary>
        [DataMember(Name="Facebook", EmitDefaultValue=false)]
        public string Facebook { get; set; }
        /// <summary>
        /// Gets or Sets Twitter
        /// </summary>
        [DataMember(Name="Twitter", EmitDefaultValue=false)]
        public string Twitter { get; set; }
        /// <summary>
        /// Gets or Sets Instagram
        /// </summary>
        [DataMember(Name="Instagram", EmitDefaultValue=false)]
        public string Instagram { get; set; }
        /// <summary>
        /// Gets or Sets Googleplus
        /// </summary>
        [DataMember(Name="Googleplus", EmitDefaultValue=false)]
        public string Googleplus { get; set; }
        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name="Company", EmitDefaultValue=false)]
        public UserTemplate Company { get; set; }
        /// <summary>
        /// Gets or Sets Marketing
        /// </summary>
        [DataMember(Name="Marketing", EmitDefaultValue=false)]
        public SnippetTemplate Marketing { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddressTemplate {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  JobTitle: ").Append(JobTitle).Append("\n");
            sb.Append("  TelMobile: ").Append(TelMobile).Append("\n");
            sb.Append("  TelDirect: ").Append(TelDirect).Append("\n");
            sb.Append("  Linkedin: ").Append(Linkedin).Append("\n");
            sb.Append("  Facebook: ").Append(Facebook).Append("\n");
            sb.Append("  Twitter: ").Append(Twitter).Append("\n");
            sb.Append("  Instagram: ").Append(Instagram).Append("\n");
            sb.Append("  Googleplus: ").Append(Googleplus).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  Marketing: ").Append(Marketing).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as AddressTemplate);
        }

        /// <summary>
        /// Returns true if AddressTemplate instances are equal
        /// </summary>
        /// <param name="other">Instance of AddressTemplate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddressTemplate other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.JobTitle == other.JobTitle ||
                    this.JobTitle != null &&
                    this.JobTitle.Equals(other.JobTitle)
                ) && 
                (
                    this.TelMobile == other.TelMobile ||
                    this.TelMobile != null &&
                    this.TelMobile.Equals(other.TelMobile)
                ) && 
                (
                    this.TelDirect == other.TelDirect ||
                    this.TelDirect != null &&
                    this.TelDirect.Equals(other.TelDirect)
                ) && 
                (
                    this.Linkedin == other.Linkedin ||
                    this.Linkedin != null &&
                    this.Linkedin.Equals(other.Linkedin)
                ) && 
                (
                    this.Facebook == other.Facebook ||
                    this.Facebook != null &&
                    this.Facebook.Equals(other.Facebook)
                ) && 
                (
                    this.Twitter == other.Twitter ||
                    this.Twitter != null &&
                    this.Twitter.Equals(other.Twitter)
                ) && 
                (
                    this.Instagram == other.Instagram ||
                    this.Instagram != null &&
                    this.Instagram.Equals(other.Instagram)
                ) && 
                (
                    this.Googleplus == other.Googleplus ||
                    this.Googleplus != null &&
                    this.Googleplus.Equals(other.Googleplus)
                ) && 
                (
                    this.Company == other.Company ||
                    this.Company != null &&
                    this.Company.Equals(other.Company)
                ) && 
                (
                    this.Marketing == other.Marketing ||
                    this.Marketing != null &&
                    this.Marketing.Equals(other.Marketing)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                if (this.JobTitle != null)
                    hash = hash * 59 + this.JobTitle.GetHashCode();
                if (this.TelMobile != null)
                    hash = hash * 59 + this.TelMobile.GetHashCode();
                if (this.TelDirect != null)
                    hash = hash * 59 + this.TelDirect.GetHashCode();
                if (this.Linkedin != null)
                    hash = hash * 59 + this.Linkedin.GetHashCode();
                if (this.Facebook != null)
                    hash = hash * 59 + this.Facebook.GetHashCode();
                if (this.Twitter != null)
                    hash = hash * 59 + this.Twitter.GetHashCode();
                if (this.Instagram != null)
                    hash = hash * 59 + this.Instagram.GetHashCode();
                if (this.Googleplus != null)
                    hash = hash * 59 + this.Googleplus.GetHashCode();
                if (this.Company != null)
                    hash = hash * 59 + this.Company.GetHashCode();
                if (this.Marketing != null)
                    hash = hash * 59 + this.Marketing.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
